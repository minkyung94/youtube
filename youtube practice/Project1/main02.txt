
//강의 13화~

//표쥰 입출력 함수 헤더 standard input output
#include <stdio.h>


/*
	*반복문
	*/
	//	for문 () 
	//	while문 ()

	/*
	- for (반복횟수 체크 변수 초기화; 반복 조건 체크(참/거짓); 반복자 변경)

			ex)	 for (int i = 0; i < length; i++)
	{

	}


	- while (조건 체크) 참이기만 하면 수행, 실패 시 반복 끝
*/

// 함수의 호출->프로그램 시작

int Add(int a, int b)
{
	return a + b; /*돌려주면서 동시에 해제*/
}

int main()
{

	int a = 100;

	int iData = Add(100, 200);


	// 0, 1, 2, 3
	for (int i = 0; i < 4; ++i)
	{
		// 1, 3 (홀수)
		if (i % 2 == 1)
		{
			continue;
		}
		printf("Output Test\n");
	}
	
	printf("--------------\n");


	/*
	int i = 0;
	while (i<2)
	{
		printf("Output Test\n");

		++i;

		continue;

		break; // 반복문 종료 구문으로 넘어가
	}
	*/

	int i1 = 0;
	int i2 = 2;




	/*
	*<콘솔>
	*/
	// printf
	printf("abcdef %d \n", 10);
	//  정수형 %d: %d자리에 다른 정수를 치환시키겠다 => abcdef10

	printf("abcdef %f \n", 3.14f);
	// 실수타입 %f


	for (int i = 0; i < 10; ++i)
	{
		printf("Output i : %d\n", i);
	}

	
	
	// scanf
	// 콘솔창으로부터 입력받음 cin
	int iInput = 0;
	scanf_s("%d", &iInput);



	/*
	* 스택, 자료구조data sturcture에서 나옴
	*	data를 어떻게 효율적으로 처리하고 관리하는지, 
	*	stack 스택: 후입선출, 선입후출, 함수 동작 방식이랑 비슷
	*	queue 큐  : 선입선출
	* 
	* ! 함수가 사용하는 메모리 영역
	*	스택 메모리 영역
	* 
	* ! 코드(작업명령서) =/= 메모리(땅덩어리)
	*	! 함수: 명령어 집합체, 명령대로 메모리 영역 조작, 관리 메모리 잡혔다 해제, 결과받고
	*/

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	return 0;
}

