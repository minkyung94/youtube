

// 주석 자료형
// 설명 역할, 코드로 인식되지 않는다.

/*
	<자료형 data type>
	: 어떠한 자료를 나타내는지 설명(크기,byte)
	(내가 선언할 메모리 공간에 이름을 부여(변수이름) 크기 형태 부연 설명해주는 역할)

		- 정수형: char(1), short(2), int(4), long(4), long long(8)
		- 실수형: float(4), double(8)


	문법: 변수 선언 먼저 -> 대입 연산자

	

	*/

int main()
{
	int i = 0;
	
	// 1바이트로 양수만 표현
	// 256가지 -> 양의 정수만 0~255까지
	unsigned char c = 0; 
	
		c = 0; // (초기화, 0으로 밀어줘)
		c = 255;
		
	
	// 1바이트로 양수 음수 모두 표현
	// -128 ~ 0 ~ 127
	char c1 = 0;
	c1 = 255;


	// 음의 정수 찾기 (2의 보수법)
		// 대응되는 양수의 부호를 반전 후, +1



	int a = 4 + 4.0;

	/*
	정수표현 방식과 실수 표현 방식 다름
	실수표현 방식은 정밀도에 의존
		따라서 double(8) 자료형이 float(4)보다 더 아래의 소수점까지 정확히 표현 가능

	정수는 정수까리, 실수는 실수끼리 연산하되, 두 표현방식의 피연산자가 연산도리 경우 명시적으로 변환하자
	*/

	float f = 1.2415f + (float)20;
		// 1.234f (folat 4바이트)
		// 1.234 (f X는 double 8바이트 간주)
	

	/*
	<연산자>
	
	대입연산자  =
	산술연산자
	모듈러스 + - * / %(모듈러스, 나머지, 피연산자가 모두 정수) 
	++ --

	*/

	int data = 10 + 10;
	// data = data + 20;
	data += 20; 
	// += 더해서 = 마감 꼭 필요

	
	data = (int)(10. / 3.);


	return 0;



}